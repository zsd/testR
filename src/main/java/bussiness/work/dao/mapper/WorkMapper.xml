<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="bussiness.work.dao.mapper.WorkMapper">

    <resultMap id="workMap" type="bussiness.work.domain.Work">
        <result column="id"             property="id" /> <!-- 作品ID -->
        <result column="name"           property="name" /> <!-- 作品标题 -->
        <result column="content"  property="content"  typeHandler="com.vansec.comm.ConvertBlobTypeHandler"/> <!-- 内容 -->
        <result column="url"            property="url" /> <!-- 作品链接 -->
        <result column="type"           property="type" /> <!-- 作品类型 -->

        <result column="reward_money"   property="rewardMoney" /> <!-- 奖励金额 -->
        <result column="reward_points"  property="rewardPoints" /> <!-- 奖励积分 -->
        <result column="set_count"      property="setCount" /> <!-- 参与人数 -->
        <result column="score"          property="score" /> <!-- 得分 -->
        <result column="user_id"        property="user.id" /> <!-- 用户Id -->

        <result column="user_name"      property="user.name" /> <!-- 用户名 -->
        <result column="create_time"    property="createTime" /> <!-- 创建时间 -->
        <result column="update_time"    property="updateTime" /> <!-- 更新时间 -->

    </resultMap>

    <sql id="table-name">tr_work</sql>

    <!-- sql片段 -->
    <sql id="sqlPart">
        id,            name,           content,    url,    type,
        reward_money,  reward_points,  set_count,  score,  user_id,
        user_name,     create_time,    update_time
    </sql>

    <!-- 根据ID获取 -->
    <select id="getById" parameterType="String" resultMap="workMap">
        select
        <include refid="sqlPart"/>
        from <include refid="table-name"/>
        where id = #{id}
    </select>

    <!--保存-->
    <insert id="save" parameterType="bussiness.work.domain.Work">
        insert into <include refid="table-name"/>
        (<include refid="sqlPart"/>)
        values (
        #{id},
        #{name},
        #{content},
        #{url},
        #{type},

        #{rewardMoney},
        #{rewardPoints},
        #{setCount},
        #{score},
        #{user.id},

        #{user.name},
        now(),
        now()
        )
    </insert>

    <!--更新-->
    <update id="update" parameterType="bussiness.work.domain.Work">
        update <include refid="table-name"/>
        set
        name = #{name},
        content = #{content},
        url = #{url},
        type = #{type},
        reward_money = #{rewardMoney},

        reward_points = #{rewardPoints},
        set_count = #{setCount},
        update_time = now()
        where id = #{id}
    </update>

    <!--删除用户-->
    <delete id="delete" parameterType="string">
        delete from <include refid="table-name"/> where id = #{id}
    </delete>

    <!-- 查询, 查询记录数 -->
    <select id="count" resultType="long">
        select count(id)
        from <include refid="table-name"/>
        <where>
            <if test="name != null">
                and name LIKE '%${name}%'
            </if>
        </where>
    </select>

    <!-- 查询, 1.输入用map传入多个参数 2.<where>语句, 添加where和and关键字 3.输出直接映射对象 -->
    <select id="search" resultMap="workMap">
        select <include refid="sqlPart"/>
        from <include refid="table-name"/>
        <where>
            <if test="name != null">
                and name LIKE '%${name}%'
            </if>
        </where>
        ORDER BY update_time DESC
        LIMIT #{skip,     jdbcType=NUMERIC  }, #{limit,     jdbcType=NUMERIC  }
    </select>

</mapper>